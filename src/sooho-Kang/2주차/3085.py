import sys


def getInputs():
    N = int(sys.stdin.readline())
    arr = [[] for _ in range(N)]
    for i in range(N):
        tempStr = sys.stdin.readline()
        for j in range(len(tempStr) - 1):
            arr[i].append(tempStr[j])
    return N, arr


def visual(arr):
    for i in arr:
        for j in i:
            sys.stdout.write(j + " ")
        print()
    print()


def checkHorizontal(arr, i, j, N, max):
    symbol = arr[i][j]
    # 바꾼 바꾼 본인 확인
    k = 1
    count = 1
    while j + k <= N - 1 and symbol == arr[i][j + k]:
        count += 1
        k += 1
        # visual(arr)
        # print(i, j)
    k = 1
    while j - k >= 0 and symbol == arr[i][j - k]:
        count += 1
        k += 1
        # visual(arr)
        # print(i, j)
    if count > max:
        max = count
    return max


def checkVertical(arr, i, j, N, max):
    symbol = arr[i][j]
    # count vertical
    k = 1
    count = 1
    # 요소 뒤에 있는 것들 찾기
    while i + k <= N - 1 and symbol == arr[i + k][j]:
        count += 1
        k += 1
        # visual(arr)
        # print(i, j)
    # 요소 앞에 있는 것들 찾기
    k = 1
    while i - k >= 0 and (symbol == arr[i - k][j]):
        count += 1
        k += 1
        # visual(arr)
        # print(i, j)
    if count > max:
        max = count
    return max


def solution(N, arr):
    max = 0
    # horizontal
    for i in range(N):
        for j in range(N - 1):
            # 먼저 바로 옆 요소를 뒤집음
            arr[i][j], arr[i][j + 1] = arr[i][j + 1], arr[i][j]
            max = checkHorizontal(arr, i, j, N, max)
            max = checkVertical(arr, i, j, N, max)
            # 친구확인
            max = checkHorizontal(arr, i, j + 1, N, max)
            max = checkVertical(arr, i, j + 1, N, max)
            # 원상복귀
            arr[i][j], arr[i][j + 1] = arr[i][j + 1], arr[i][j]
    # vertical
    for j in range(N):
        for i in range(N - 1):
            arr[i + 1][j], arr[i][j] = arr[i][j], arr[i + 1][j]
            max = checkHorizontal(arr, i, j, N, max)
            max = checkVertical(arr, i, j, N, max)
            # 친구확인
            max = checkHorizontal(arr, i + 1, j, N, max)
            max = checkVertical(arr, i + 1, j, N, max)
            # 원상복귀
            arr[i + 1][j], arr[i][j] = arr[i][j], arr[i + 1][j]
    return max


def main():
    N, arr = getInputs()
    sys.stdout.write(str(solution(N, arr)))

main()

# expected answer:48
# 50
# PZYCZPPPPPYYYYZPZCCZPZYPPPPZPYZYYCPYPPCCPYZCYPYZZY
# YCPCZZCYCCCCCCCCCCCCCCCCCCPCCYCCYCCCCCCCCCCCYCZYPY
# YYCCPPZCPCZYCYPZZCYCYYYZYYPCZYCZYZCPZCCYZPZPYZZPPY
# CYCZYPYZPCZYPCYCCZCCCCCCCCPCCYCCCCCCPCCCCCCCYCCYPZ
# CYCZYCYZZCZZZCPZPPYPZYYZZCPZYYZCZPPYZZYZYZPZYYCPCZ
# YYPCZCPPCYZCYCZZPPPYZYYCYPPYPYYPPZPPPPPPPPZPYPPZZY
# CYPPYYZZCPZZPPZPYYZYPCYZPPPPPYPPPPPPPPCZZZCCYYZPYP
# ZYCZZZZZCZZYZYZZPCYZYPPZPZPPCYYZPPZCPYYZYCYCYYYCZP
# YYPYCCYCYYZYCYYYYYYYPYYYYYPPPYCCPYYYYPYPCPPYYYYYYP
# PYYYYPZZZZZCZZCCCZZPZCPZPCPPCYZYYYCYCCCPYPZYYYZZPY
# YYCYPCCCCPZYYCYZPZYYPPPPYCPPCYPPZYCPPCYZPPCYYPPZCP
# ZYZYCPYZCZZYYPZPCCZYCPCPYCPZYYCCZCZZZCYCPZYYYYPPPC
# YYCYCCCCCPZPPYPPYCCCCCCCCCPCCYCCCCCCCCCCZYPYYPZYCZ
# ZYZYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYZYZZ
# ZYYYYZZZYZYCPCCYPYPCZZCZZYPPZYPZPZZYCCYCPYPYYYZPZP
# CYCYCPZPYZYZYYYCYYPYCYYZPZPZPYCPCYCYYCPYCYYYYYZZPY
# CYYYCZCZCPYYCCYZZZZZCYCZYZPZZYZPYCCZYCCPZCZYYCZYPC
# PYZYYZCZYZYPYPCZYYYYZPCZPPPZCYZCCYPPZYZZYCZYYCZPCC
# ZYZYCZPYZZYPCCCYZCPYYCCZCPPZZYPYCZZCYCZZCPZYYCZPPC
# CYZYCZZYPCYCCZYCYPZCPYCZZZPYYYYYPPPYPCPZYZZYYCZYPP
# ZYCYCZCYYCYZYCPYCCCZCZCZYZPPPYZCCYCPCZZZCCPYYCZCYY
# ZZZZZZZZZZZZZZZCZZZZZZZZZZPZZYZZZZZZZZZCPZZYYZZYPC
# CYZYZCPCPYYYYCZZYYCZYZCZZYPYYYYZPPPCYYZZYPCYYCZYPZ
# YYZYZZZPYCYYPYYCZZYCCZCZYZYPYYZYYCCCCYCZZZZYYCZPZZ
# ZYZYPZYZZCYYYPCYCPCYPCCZYYPCCYPZCCZZYPYZZCCYYCZCCP
# YYZYYZYYYYYYYYYYYYYYYYYZYYPYYYYYYYYYYYYZYYYYYCPPYC
# CYZYCZPZZZYCCPPZYPCZZZZZZZPZYYZZZZZPPYZZYYYYYCZCPP
# YYYYYYYYYYYYYYYYYYYYYYYYYYPYYYYYYYYYYYYZYYYYYCPZCC
# YYCYPZYCPPPPPPPPPPPPPPPPPPPPPYPPPPPPPPPZCCZYYCYZYY
# CYCCCZCCCCYCCCCCCCCCCCCCCCPCCYCCCCYCCCZZYCPYYCYPCY
# CYZYZZCCZZYCZCCCCCCCZYCZPCPCPYCYCCYPYYPZPYYYYCPPPZ
# CYZYYZYPYPYZPZZYZCYZZCCZZCPPYYCYZZPZYPCCZCZYYPCPPY
# YYZYCZYYCPYCYZZZZCYZPZCZCPPPPYZYYZZCYCZZPCPYYCZPCC
# CYYYPZZYCYYYCZZYYZYYPZCZYPPPZYZPZYCCCCPCZCYYYCPYCY
# CZCYYZPCCYYZYCZZCZPPPZCZCZPYCYPCPPYZCZZPPPPYYCZCYP
# ZZYYYPCZYZYYCYCCCPYCCPCZZCPYYPZZCZPYCPZPCYPYYCPYZY
# CYPYPPCPPPYZYZPCPZPCCCCZYZPYZYPCCZPPPPPPPPPYYCPPPP
# PYYYPPPZZCYYYPYZZCZYPCCZPZPYYYPCZCZZZYZYPPZYYCCCCP
# ZZZYCYYYZZYZCPCPZCCPYPCYPYPZYYPZPCCYPYCZZYCYYCZZPY
# CZZYPPPYZPYCPYYCCZYPCPCPPZPPYYZPYCZYZZCYZCYYYPPZZY
# YPZYCPPCZCYCCZCCYZCZYZCPPCPYYYZZYCYPZCYPPCCYYPCYYY
# ZPZYPPCZYCYCZYYYPCYCYYCZZPPYYYCYCCPPCYCCZCPYYPPCZY
# PCZPPPPPPPYPPPPPPPPPPPPPPZPYYYYPPCZYYPPCZPCYYPPYCY
# PCZYPCYCPZYZPCPZPZPYYZPCZZPZYYPYPCPPPYPPPCPYPPYPCY
# ZYPPPPYYCCYPZPZZZPPPCPPZCYZZPYCPPCZYCYCPPCYYYCPYZP
# PCZYYYYZZZYCZCPPPCPCZPCPYPCZYYYZPCZCYCZZZCYYYYYZZY
# CZCYYYYYYZYPPPYPYZYZYYYZYPPZYYZZYCZPPYZYPCPYYPYPYC
# ZYCZZYCYYPYZCCPPYPPCPYZCCYCZYYYZPCZZCPZPZCPYYCYPPY
# ZYYCPYPZCPYCPPPPYPPCZYYYCCYYYPYZCCCCPZYCYPPYPZPZYC
# PPYYYYYZPPZYPYYCYCZZZCYCYYYYYYYYCYYYYYYYYYYYYYYCZY


# expeced answer 37
# 40
# YYYYYYYYYCYYYYYYYYYYYYYYYCZZZZZZZYYYYYZC
# PYPCYZCPYCZZCCPZYYPZYYYYPPZZPYCCCZYZZZPY
# ZPPCYCCPYYZYPPZCZPYCCCZZYYPZZPYPPPPZPCZC
# ZCYYZZYCPPPCCYPYYPZZZZCCCCZZCZCYCYZCZZYC
# PYZYZZCCZZCCPPYCZPYPPZYZYYYZZPPCCZYYYZCZ
# PPPCZZPCCCCCCCCCCCCCCCCCCYCZYYYZCYYCPCPZ
# PZYPZYPPYYYZZZPPPZPYZPYZCZZPYZCZZPPCYCCZ
# YPPYYYYCCPYPZPCPPPCZCZZYZZZZYYZPZZCCCZYY
# YPZCZCPZYYZCCPPPYPPCCPCYZYYYCPPPYCYYCPYC
# ZPYZCCZCYZYYCPCCPPYYZPYCCPPCPZCCZCCZYYPY
# CPPPCPZZZCYCPYCZYZZPYPZCYYCCZCZZPZYCPZCZ
# YZYCYPCPPYPPPPYYYPYPCPCPZZPPCYZCZPZZZZYP
# ZCZPYZPPYYYPYPCZYZZYZZPZCZPPPZYCZYPCPYYC
# YPZPZYCCYPZZCCPYYCYZYYYYYCZYZZYZZPPYCZCZ
# YCZPZCCCCCYCCCCCCCCCCCZYPYZPCZPZZPZZYPYY
# YYYYYYYYYYPYYYYYYYYYYYYYYYYYYYYYYYYYYZZP
# ZYZCZZCCZPZCZYCPYPCCPYZYCCPPZZCZYCZCYPYP
# YYZYPZZYCPCYCZPZYCZPZCCZYCCCZZZYYYZYYPCP
# YZZPZYPYCZCPPCZPYCCPYCYZPCCYYZYPCPPPYYPZ
# YYZPPZYCZZZYYPYCYZCCYYZPYCCYPZCCZCCCYYZC
# CYZZPPCZYZYCCPCYYCPZPPZZPCZZYZZYZZCZYYPC
# PPZYZYZPZZZZYPZYYPZPPZPPZCYCPZYZPPYYYYYZ
# CZZZYPZYCCYYYPPZYCYPZPCCPCYYYZZYCPYCYCYY
# YCZZCZCCYPPYYZYYYPPPZZYYCCCYYZZZYZZZYYCC
# YCZPZPPPZPCYYYZZYCPPZYPZYCZZZZZPYYPYCYPC
# PCZZZYYZCPCPCZYYYCPYZCCPZCZPYZZPYPZPYZYY
# ZZZZPPPPPYZCZCPYYCCCCCCCCCCCYCCCCCCPCCCP
# CPYCYZCZCZCYCPCYYCYZCZYYZCCPZZYZPZCPYCCP
# YZZYYZZZZPZZCZCYYCZZPYZYCCPCPZYCYCZPYZPZ
# YZZZZZZZZZZZZZZZZZZZZZZZCZZZZZZZZZZZZZZZ
# YZZPPPPPPPPPPPPPPCPPPPPYYCYCZZZCCPCCYPYZ
# YYZCPYPPYZPPYCZPYCZPCPCZZZCYCZYZCPCPZPZZ
# CYZPCYYYYYYYYYYYYCYYYYYYYYYYYZYYCYZYPYZC
# CPZCCZZZZZZZZZZZZCZZZZZZZZZZYZCCZCPZZCCY
# YYZPCPZZCYYYYYCPYCZPYYYPPZZCCZZCPPPPCCPP
# YYZZPCCYZCCCYPCYYPZCZZZZZPPYZCCCCCZCPPCY
# PYYYYYYYYYYYYYYYYYYYYYYPYCZZPPYZYPPPPYCC
# YPZCZPZYPZPPCYCZYCYPCCCZCZZCCZYZYYCYYZCZ
# CPPZZPCYYCCCYCCPZPYYZYCYZYZYPYCPPZPCPCYC
# ZPCYPYZPPCYYPYZZZPPZZZCCPYCYPCYYCYPPYCZY